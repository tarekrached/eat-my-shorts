{"version":3,"sources":["actions/update-settings.js","utilities/index.js","actions/fetch-station-etds.js","actions/fetch-bart-advisories.js","reducers/settings.js","reducers/station-etds.js","reducers/bart-advisories.js","reducers/user-location.js","reducers/index.js","actions/get-user-location.js","selectors/current-station-etds.js","selectors/transfer-magic.js","selectors/closest-station.js","components/trip.js","components/transfer-magic.js","registerServiceWorker.js","index.js","store.js"],"names":["bartApiKey","bartApiRoot","window","location","protocol","bartStationETDsUrl","station","dir","arguments","length","undefined","concat","toLowerCase","bartAdvisoriesUrl","checkFetchStatus","response","status","error","Error","statusText","stationsHome","radians","n","Math","PI","getBearing","_ref","_ref2","startLong","startLat","endLong","endLat","dLong","dPhi","log","tan","abs","atan2","settingsPresets","preset","currentBartStation","bartDestination","bartMinutes","bartDirection","walkingMinutes","trainColors","requestStationETDs","type","meta","receiveStationETDs","payload","receiveStationETDsError","console","fetchStationETDs","dispatch","getState","url","fetch","then","req","json","data","catch","e","fetchBartAdvisories","Date","getHours","defaultState","find","d","defaultStation","isFetching","bartAdvisories","position","reducers","combineReducers","settings","state","action","Object","assign","stationETDs","stationUpdate","root","date","time","etd","destinations","at","moment","updatedStation","trains","reduce","acc","destination","abbreviation","limited","estimate","map","train","intMinutes","minutes","parseInt","clone","add","sort","a","b","diff","errorStation","bsa","i","description","userLocation","currentStationEtdsSelector","createSelector","filter","t","includes","color","transferMagicSelector","stations","target","colors","direction","source","some","s","rawTrains","trainStations","stationTrain","targetTrains","sourceTrains","bartStations","rawBartStations","lat","parseFloat","gtfs_latitude","lon","gtfs_longitude","bartStationMap","abbr","forEach","allAdjacencies","bartRoutes","config","idx","indexOf","adjacencies","Array","from","Set","adj","distance","geoDistance","bearing","distanceToStationsSelector","coords","latitude","longitude","timestamp","distanceToStations","closestDistance","min","closestStation","Trip","Component","constructor","timer","counter","handleReload","this","load","tick","setState","switchPreset","newSettings","props","updateSettings","componentDidMount","setInterval","componentWillUnmount","clearInterval","render","React","createElement","className","onClick","Link","to","id","platform","hexcolor","bikeflag","delay","key","style","backgroundColor","fromNow","format","href","adv","name","mins","connect","App","componentWillMount","transferMagicData","join","_ref3","_ref4","_ref5","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","updateLocale","relativeTime","StoreInstance","history","initialState","create","devToolsExtension","createStore","applyMiddleware","thunkMiddleware","routerMiddleware","createStoreWithMiddleware","Store","ReactDOM","Provider","store","Router","Route","exact","path","component","TransferMagic","document","getElementById","URL","process","origin","addEventListener","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.366d5257.chunk.js","sourcesContent":["export const UPDATE_SETTINGS = \"UPDATE_SETTINGS\"\n\nexport const updateSettings = settings => ({\n  type: UPDATE_SETTINGS,\n  payload: settings,\n})\n","export const bartApiKey = \"MW9S-E7SL-26DU-VV8V&\"\nexport const bartApiRoot = window.location.protocol + \"//api.bart.gov/api/\"\n\nexport const bartStationETDsUrl = (station, dir = null) =>\n  `${bartApiRoot}etd.aspx?cmd=etd&orig=${station}${\n    dir ? \"&dir=\" + dir[0].toLowerCase() : \"\"\n  }&key=${bartApiKey}&json=y`\n\nexport const bartAdvisoriesUrl = `${bartApiRoot}bsa.aspx?cmd=bsa&key=${bartApiKey}&json=y`\n\nexport const checkFetchStatus = response => {\n  if (response.status >= 200 && response.status < 300) {\n    return response\n  }\n  const error = new Error(response.statusText)\n  error.response = response\n  throw error\n}\n\nexport const stationsHome = [\n  [\"24th Mission\", 32, \"24TH\"],\n  [\"16th Mission\", 30, \"16TH\"],\n  [\"Civic Center\", 28, \"CIVC\"],\n  [\"Powell\", 26, \"POWL\"],\n  [\"Montgomery\", 25, \"MONT\"],\n  [\"Embarcadero\", 23, \"EMBR\"],\n  [\"West Oakland\", 16, \"WOAK\"],\n  [\"12th\", 13, \"12TH\"],\n  [\"19th\", 11, \"19TH\"],\n  [\"MacArthur\", 8, \"MCAR\"],\n  [\"Ashby\", 5, \"ASHB\"],\n  [\"Berkeley\", 2, \"DBRK\"],\n  [\"North Berkeley\", 0, \"NBRK\"],\n]\n\nexport const radians = n => n * (Math.PI / 180)\n\nexport const degrees = n => n * (180 / Math.PI)\n\nexport const getBearing = ([startLong, startLat], [endLong, endLat]) => {\n  startLat = radians(startLat)\n  startLong = radians(startLong)\n  endLat = radians(endLat)\n  endLong = radians(endLong)\n\n  var dLong = endLong - startLong\n\n  var dPhi = Math.log(\n    Math.tan(endLat / 2.0 + Math.PI / 4.0) /\n      Math.tan(startLat / 2.0 + Math.PI / 4.0)\n  )\n  if (Math.abs(dLong) > Math.PI) {\n    if (dLong > 0.0) dLong = -(2.0 * Math.PI - dLong)\n    else dLong = 2.0 * Math.PI + dLong\n  }\n\n  return (degrees(Math.atan2(dLong, dPhi)) + 360.0) % 360.0\n}\n\nexport const settingsPresets = [\n  {\n    preset: \"home2Work\",\n    currentBartStation: \"NBRK\",\n    bartDestination: \"MONT\",\n    bartMinutes: 25,\n    bartDirection: \"South\",\n    walkingMinutes: 10,\n  },\n  {\n    preset: \"work2Home\",\n    currentBartStation: \"MONT\",\n    bartDestination: \"NBRK\",\n    bartMinutes: 25,\n    bartDirection: \"North\",\n    trainColors: [\"RED\", \"YELLOW\"],\n    walkingMinutes: 9,\n  },\n]\n","import { checkFetchStatus, bartStationETDsUrl } from \"../utilities\"\n\nexport const REQUEST_STATION_ETDS = \"REQUEST_STATION_ETDS\"\nexport const RECEIVE_STATION_ETDS = \"RECEIVE_STATION_ETDS\"\nexport const RECEIVE_STATION_ETDS_ERROR = \"RECEIVE_STATION_ETDS_ERROR\"\n\nfunction requestStationETDs(station, dir) {\n  return {\n    type: REQUEST_STATION_ETDS,\n    meta: { station, dir },\n  }\n}\n\nfunction receiveStationETDs(station, dir, payload) {\n  return {\n    type: RECEIVE_STATION_ETDS,\n    meta: { station, dir },\n    payload,\n  }\n}\n\nfunction receiveStationETDsError(station, dir, error) {\n  console.error(error)\n  return {\n    type: RECEIVE_STATION_ETDS_ERROR,\n    meta: { station, dir },\n    error,\n  }\n}\n\nexport function fetchStationETDs(station, dir = null) {\n  return (dispatch, getState) => {\n    dispatch(requestStationETDs(station, dir))\n\n    let url = bartStationETDsUrl(station, dir)\n\n    return fetch(url)\n      .then(checkFetchStatus)\n      .then(req => req.json())\n      .then(data => dispatch(receiveStationETDs(station, dir, data)))\n      .catch(e => dispatch(receiveStationETDsError(station, dir, e)))\n  }\n}\n","import { checkFetchStatus, bartAdvisoriesUrl } from \"../utilities\"\n\nexport const REQUEST_BART_ADVISORIES = \"REQUEST_BART_ADVISORIES\"\nexport const RECEIVE_BART_ADVISORIES = \"RECEIVE_BART_ADVISORIES\"\nexport const RECEIVE_BART_ADVISORIES_ERROR = \"RECEIVE_BART_ADVISORIES_ERROR\"\n\nfunction requestBartAdvisories() {\n  return {\n    type: REQUEST_BART_ADVISORIES,\n  }\n}\n\nfunction receiveBartAdvisories(payload) {\n  return {\n    type: RECEIVE_BART_ADVISORIES,\n    payload,\n  }\n}\n\nfunction receiveBartAdvisoriesError(error) {\n  console.error(error)\n  return {\n    type: RECEIVE_BART_ADVISORIES_ERROR,\n    error,\n  }\n}\n\nexport function fetchBartAdvisories(station) {\n  return (dispatch, getState) => {\n    dispatch(requestBartAdvisories())\n\n    return fetch(bartAdvisoriesUrl)\n      .then(checkFetchStatus)\n      .then(req => req.json())\n      .then(data => dispatch(receiveBartAdvisories(data)))\n      .catch(e => dispatch(receiveBartAdvisoriesError(e)))\n  }\n}\n","import { UPDATE_SETTINGS } from \"../actions/\"\nimport { settingsPresets } from \"../utilities\"\n\nconst preset = new Date().getHours() < 12 ? \"home2Work\" : \"work2Home\"\nconst defaultState = settingsPresets.find(d => d.preset === preset)\n\nexport default function settings(state = defaultState, action) {\n  switch (action.type) {\n    case UPDATE_SETTINGS:\n      return Object.assign({}, state, action.payload)\n    default:\n      return state\n  }\n}\n","import moment from \"moment\"\n\nimport {\n  REQUEST_STATION_ETDS,\n  RECEIVE_STATION_ETDS,\n  RECEIVE_STATION_ETDS_ERROR,\n} from \"../actions/\"\n\nconst defaultStation = {\n  isFetching: true,\n  error: false,\n}\nconst defaultState = {}\n\nexport default function stationETDs(state = defaultState, action) {\n  switch (action.type) {\n    case REQUEST_STATION_ETDS:\n      let { station } = action.meta\n\n      const stationUpdate = Object.assign(state[station] || defaultStation, {\n        isFetching: true,\n      })\n\n      return Object.assign({}, state, { [station]: stationUpdate })\n\n    case RECEIVE_STATION_ETDS:\n      const {\n        root: { date, time, station: [{ etd: destinations }] },\n      } = action.payload\n\n      const at = moment(date + time, \"MM/DD/YYYYHH:mm:ss a\")\n\n      const trains = destinations\n        .reduce(\n          (acc, { destination, abbreviation, limited, estimate }) =>\n            acc.concat(\n              estimate.map(train => {\n                const intMinutes =\n                  train.minutes === \"Leaving\" ? 0 : parseInt(train.minutes, 10)\n                return Object.assign(train, {\n                  destination,\n                  abbreviation,\n                  limited,\n                  intMinutes,\n                  at: at.clone().add(intMinutes, \"minutes\"),\n                })\n              })\n            ),\n          []\n        )\n        .sort((a, b) => a.at.diff(b.at))\n\n      const updatedStation = {\n        isFetching: false,\n        trains,\n        at,\n      }\n\n      return Object.assign({}, state, { [action.meta.station]: updatedStation })\n\n    case RECEIVE_STATION_ETDS_ERROR:\n      const errorStation = Object.assign({}, state[action.meta.station], {\n        error: action.error,\n      })\n      return Object.assign({}, state, { [action.meta.station]: errorStation })\n\n    default:\n      return state\n  }\n}\n","import {\n  REQUEST_BART_ADVISORIES,\n  RECEIVE_BART_ADVISORIES,\n  RECEIVE_BART_ADVISORIES_ERROR,\n} from \"../actions/\"\n\nconst defaultState = {\n  bartAdvisories: undefined,\n  isFetching: true,\n  error: false,\n}\n\nexport default function bartAdvisories(state = defaultState, action) {\n  switch (action.type) {\n    case REQUEST_BART_ADVISORIES:\n      return Object.assign({}, state, defaultState, {\n        isFetching: true,\n        error: false,\n      })\n    case RECEIVE_BART_ADVISORIES:\n      return Object.assign({}, state, {\n        bartAdvisories: action.payload.root.bsa.map(\n          i => i.description[\"#cdata-section\"]\n        ),\n        isFetching: false,\n        error: false,\n      })\n    case RECEIVE_BART_ADVISORIES_ERROR:\n      return Object.assign({}, state, {\n        isFetching: false,\n        error: action.error,\n      })\n    default:\n      return state\n  }\n}\n","import {\n  REQUEST_USER_LOCATION,\n  RECEIVE_USER_LOCATION,\n  RECEIVE_USER_LOCATION_ERROR,\n} from \"../actions/\"\n\nconst defaultState = {\n  position: undefined,\n  isFetching: false,\n  error: false,\n}\n\nexport default function userLocation(state = defaultState, action) {\n  switch (action.type) {\n    case REQUEST_USER_LOCATION:\n      return Object.assign({}, state, {\n        isFetching: true,\n        error: false,\n      })\n    case RECEIVE_USER_LOCATION:\n      return Object.assign({}, state, {\n        position: action.payload,\n        isFetching: false,\n        error: false,\n      })\n    case RECEIVE_USER_LOCATION_ERROR:\n      return Object.assign({}, state, {\n        isFetching: false,\n        error: action.error,\n      })\n    default:\n      return state\n  }\n}\n","import { combineReducers } from \"redux\"\n\nimport settings from \"./settings\"\nimport stationETDs from \"./station-etds\"\nimport bartAdvisories from \"./bart-advisories\"\nimport userLocation from \"./user-location\"\n\nconst reducers = combineReducers({\n  settings,\n  stationETDs,\n  bartAdvisories,\n  userLocation,\n})\n\nexport default reducers\n","export const REQUEST_USER_LOCATION = \"REQUEST_USER_LOCATION\"\nexport const RECEIVE_USER_LOCATION = \"RECEIVE_USER_LOCATION\"\nexport const RECEIVE_USER_LOCATION_ERROR = \"RECEIVE_USER_LOCATION_ERROR\"\n\nfunction requestUserLocation() {\n  return {\n    type: REQUEST_USER_LOCATION,\n  }\n}\n\nfunction receiveUserLocation(payload) {\n  return {\n    type: RECEIVE_USER_LOCATION,\n    payload,\n  }\n}\n\nfunction receiveUserLocationError(error) {\n  console.error(error)\n  return {\n    type: RECEIVE_USER_LOCATION_ERROR,\n    error,\n  }\n}\n\nexport function getUserLocation() {\n  return (dispatch, getState) => {\n    dispatch(requestUserLocation())\n\n    navigator.geolocation.getCurrentPosition(\n      pos => dispatch(receiveUserLocation(pos)),\n      e => dispatch(receiveUserLocationError(e))\n    )\n  }\n}\n","import { createSelector } from \"reselect\"\n\nconst stationETDsSelector = state => state.stationETDs\nconst settingsSelector = state => state.settings\n\nexport const currentStationEtdsSelector = createSelector(\n  stationETDsSelector,\n  settingsSelector,\n  (\n    stationETDs,\n    {\n      currentBartStation,\n      bartDirection,\n      trainColors,\n      bartMinutes,\n      walkingMinutes,\n    }\n  ) => {\n    if (\n      !stationETDs[currentBartStation] ||\n      !stationETDs[currentBartStation].trains\n    ) {\n      return { isFetching: true }\n    }\n    return {\n      at: stationETDs[currentBartStation].at,\n      trains: stationETDs[currentBartStation].trains\n        .filter(\n          t =>\n            // t.direction === bartDirection &&\n            !trainColors || trainColors.includes(t.color)\n        )\n        .map(t =>\n          Object.assign({}, t, {\n            etd: t.at.clone().add(bartMinutes + walkingMinutes, \"minutes\"),\n          })\n        ),\n      isFetching: stationETDs[currentBartStation].isFetching,\n    }\n  }\n)\n","import { createSelector } from \"reselect\"\n\nconst stationETDsSelector = state => state.stationETDs\n\nexport const transferMagicSelector = createSelector(\n  stationETDsSelector,\n  (stationETDs, settings) => {\n    const stations = [\"12TH\", \"19TH\", \"MCAR\"]\n    const target = {\n      colors: [\"ORANGE\", \"RED\"],\n      direction: \"North\",\n    }\n    const source = {\n      colors: [\"YELLOW\"],\n      direction: \"North\",\n    }\n\n    if (stations.some(s => !stationETDs[s] || !stationETDs[s].trains)) {\n      return { isFetching: true }\n    }\n\n    const rawTrains = stationETDs[stations[0]].trains.map(train => {\n      let trainStations = stations.reduce((acc, station) => {\n        const stationTrain = stationETDs[station].trains.find(\n          t =>\n            t.destination === train.destination &&\n            t.length === train.length &&\n            t.intMinutes >= train.intMinutes\n        )\n        return stationTrain\n          ? acc.concat({\n              station,\n              at: stationTrain.at,\n              intMinutes: stationTrain.intMinutes,\n            })\n          : acc\n      }, [])\n\n      return {\n        train,\n        stations: trainStations,\n      }\n    })\n\n    const targetTrains = rawTrains.filter(\n      t =>\n        target.colors.includes(t.train.color) &&\n        t.train.direction === target.direction\n    )\n\n    const sourceTrains = rawTrains.filter(\n      t =>\n        source.colors.includes(t.train.color) &&\n        t.train.direction === source.direction\n    )\n\n    return {\n      isFetching: false,\n      targetTrains,\n      sourceTrains,\n      stations: stations.map(station => ({\n        station,\n        targetTrains: stationETDs[station].trains.filter(\n          t =>\n            target.colors.includes(t.color) && t.direction === target.direction\n        ),\n        sourceTrains: stationETDs[station].trains.filter(\n          t =>\n            source.colors.includes(t.color) && t.direction === source.direction\n        ),\n      })),\n    }\n  }\n)\n","import { createSelector } from \"reselect\"\nimport { geoDistance } from \"d3-geo\"\nimport { min } from \"d3-array\"\n\nimport { getBearing } from \"../utilities\"\nimport rawBartStations from \"../data/bart-stations.json\"\nimport bartRoutes from \"../data/bart-routes.json\"\n\nconst bartStations = rawBartStations.map(s =>\n  Object.assign({}, s, {\n    lat: parseFloat(s.gtfs_latitude),\n    lon: parseFloat(s.gtfs_longitude),\n  })\n)\nconst bartStationMap = bartStations.reduce(\n  (acc, s) => Object.assign(acc, { [s.abbr]: s }),\n  {}\n)\n\nbartStations.forEach(s => {\n  const abbr = s.abbr\n  const allAdjacencies = bartRoutes.reduce((acc, { config: { station } }) => {\n    const idx = station.indexOf(abbr)\n    if (idx === -1) {\n      return acc\n    }\n    if (idx === 0) {\n      return acc.concat(station[1])\n    }\n    if (idx === station.length - 1) {\n      return acc.concat(station[station.length - 2])\n    }\n    return acc.concat([station[idx - 1], station[idx + 1]])\n  }, [])\n  s.adjacencies = Array.from(new Set(allAdjacencies)).reduce(\n    (acc, adj) =>\n      Object.assign(acc, {\n        [adj]: {\n          distance: geoDistance(\n            [s.lon, s.lat],\n            [bartStationMap[adj].lon, bartStationMap[adj].lat]\n          ),\n          bearing: getBearing(\n            [s.lon, s.lat],\n            [bartStationMap[adj].lon, bartStationMap[adj].lat]\n          ),\n        },\n      }),\n    {}\n  )\n})\nconsole.log(bartStations)\n\nconst userLocationSelector = state => state.userLocation\n\nexport const distanceToStationsSelector = createSelector(\n  userLocationSelector,\n  userLocation => {\n    if (userLocation.isFetching) {\n      return { isFetching: true }\n    }\n    const {\n      coords: { latitude: lat, longitude: lon },\n      timestamp,\n    } = userLocation.position\n\n    const distanceToStations = bartStations.map(s =>\n      Object.assign({}, s, {\n        distance: geoDistance([s.lon, s.lat], [lon, lat]),\n        bearing: getBearing([s.lon, s.lat], [lon, lat]),\n      })\n    )\n\n    return {\n      isFetching: false,\n      distanceToStations,\n      timestamp,\n    }\n  }\n)\n\nexport const closestStationSelector = createSelector(\n  distanceToStationsSelector,\n  distanceToStations => {\n    if (distanceToStations.isFetching) {\n      return { isFetching: true }\n    }\n    const closestDistance = min(\n      distanceToStations.distanceToStations,\n      s => s.distance\n    )\n    const closestStation = distanceToStations.find(\n      ({ distance }) => distance === closestDistance\n    )\n\n    return {\n      isFetching: false,\n      closestStation,\n    }\n  }\n)\n","import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  fetchStationETDs,\n  fetchBartAdvisories,\n  updateSettings,\n} from \"../actions\"\nimport { currentStationEtdsSelector } from \"../selectors\"\nimport { stationsHome, settingsPresets } from \"../utilities\"\n\nclass Trip extends Component {\n  state = {\n    timer: null,\n    counter: 0,\n  }\n\n  componentDidMount() {\n    this.load()\n    this.setState({ timer: setInterval(this.tick, 3000) })\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timer)\n  }\n\n  load() {\n    this.props.dispatch(\n      fetchStationETDs(\n        this.props.settings.currentBartStation,\n        this.props.settings.bartDirection\n      )\n    )\n    this.props.dispatch(fetchBartAdvisories())\n  }\n\n  handleReload = e => this.load()\n\n  tick = () => {\n    this.setState({\n      counter: this.state.counter + 1,\n    })\n  }\n  switchPreset = () => {\n    const newSettings = settingsPresets.find(\n      d => d.preset !== this.props.settings.preset\n    )\n\n    this.props.dispatch(updateSettings(newSettings))\n    this.props.dispatch(\n      fetchStationETDs(\n        newSettings.currentBartStation,\n        newSettings.bartDirection\n      )\n    )\n  }\n\n  render() {\n    const {\n      settings: {\n        preset,\n        currentBartStation,\n        bartDirection,\n        walkingMinutes,\n        bartMinutes,\n      },\n      stationETDs,\n      bartAdvisories,\n    } = this.props\n\n    return (\n      <div className=\"bart-home\">\n        <div className=\"top-menu\">\n          <div>\n            preset: {preset} <button onClick={this.switchPreset}>switch</button>\n          </div>\n\n          <Link to=\"/transfer-magic\">Transfer!</Link>\n        </div>\n        <div className=\"bart-trains\">\n          {stationETDs.trains && (\n            <div id=\"bart-trains\">\n              {stationETDs.trains.map(\n                (\n                  {\n                    minutes,\n                    platform,\n                    direction,\n                    length,\n                    color,\n                    hexcolor,\n                    bikeflag,\n                    delay,\n                    destination,\n                    abbreviation,\n                    limited,\n                    at,\n                    etd,\n                  },\n                  i\n                ) => (\n                  <div className=\"train\" key={i}>\n                    <span\n                      className=\"color\"\n                      style={{ backgroundColor: hexcolor }}\n                    />{\" \"}\n                    <span className=\"minutes\">{at.fromNow(true)}</span>{\" \"}\n                    <span className=\"destination\">{destination}</span>{\" \"}\n                    <span className=\"length\">{length} car</span>{\" \"}\n                    <span className=\"home-time\">{etd.format(\"h:mm a\")}</span>\n                  </div>\n                )\n              )}\n            </div>\n          )}\n        </div>\n        <div id=\"bart-advisories\">\n          <a href=\"http://m.bart.gov/schedules/advisories\">BART Advisories</a>:{\" \"}\n          {bartAdvisories.isFetching && (\n            <span className=\"loading\">loading advisories</span>\n          )}\n          {bartAdvisories.bartAdvisories && (\n            <span id=\"bart-advisory-list\">\n              {bartAdvisories.bartAdvisories.map((adv, i) => (\n                <span key={i}>{adv}</span>\n              ))}\n            </span>\n          )}\n        </div>\n        <div className=\"data-freshness\">\n          {stationETDs.isFetching && (\n            <span className=\"loading\">\n              loading {currentBartStation} {bartDirection} trains\n            </span>\n          )}\n          {!stationETDs.isFetching && (\n            <span className=\"status\">\n              {currentBartStation} {bartDirection} trains{\" \"}\n              {stationETDs.at.fromNow()}\n            </span>\n          )}\n          <button onClick={this.handleReload}>Reload</button>\n        </div>\n        <div id=\"en-route-times\">\n          <ul id=\"bart-station-times\">\n            {stationsHome.map(([name, mins, abbr]) => (\n              <li key={abbr}>\n                <a href={`https://www.bart.gov/schedules/eta/${abbr}`}>\n                  {name}\n                </a>\n                : {mins} mins\n              </li>\n            ))}\n          </ul>\n        </div>\n        <p id=\"estimate-info\">\n          Arrival estimates include {bartMinutes} minutes on train and{\" \"}\n          {walkingMinutes} minutes on foot.\n        </p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  settings: state.settings,\n  stationETDs: currentStationEtdsSelector(state),\n  bartAdvisories: state.bartAdvisories,\n})\n\nexport default connect(mapStateToProps)(Trip)\n","import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\n\nimport { fetchStationETDs } from \"../actions\"\nimport { transferMagicSelector } from \"../selectors\"\n\nclass App extends Component {\n  state = {}\n\n  componentWillMount() {\n    this.load()\n  }\n  load() {\n    this.props.dispatch(fetchStationETDs(\"12TH\", \"North\"))\n    this.props.dispatch(fetchStationETDs(\"19TH\", \"North\"))\n    this.props.dispatch(fetchStationETDs(\"MCAR\", \"North\"))\n  }\n  handleReload = e => this.load()\n\n  render() {\n    const {\n      transferMagicData: { isFetching, targetTrains, sourceTrains, stations },\n    } = this.props\n    if (isFetching) {\n      return <div className=\"loading\">loading</div>\n    }\n    return (\n      <div className=\"transfer-magic\">\n        <div className=\"top-menu\">\n          <div />\n\n          <Link to=\"/\">Home</Link>\n        </div>\n        <div className=\"stations\">\n          {stations.map(({ station, targetTrains, sourceTrains }) => (\n            <div key={station} className=\"station\">\n              <div>\n                <a href={`https://www.bart.gov/schedules/eta/${station}`}>\n                  {station}\n                </a>\n              </div>\n              <div>\n                source: {sourceTrains.map(t => t.intMinutes).join(\", \")}\n              </div>\n              <div>\n                target:{\" \"}\n                {targetTrains\n                  .filter(t => t.intMinutes >= sourceTrains[0].intMinutes)\n                  .map(t => t.intMinutes)\n                  .join(\", \")}\n              </div>\n            </div>\n          ))}\n        </div>\n        <div>\n          <h2>Targets:</h2>\n          {targetTrains.map(({ train, stations }, i) => (\n            <div key={i}>\n              <div className=\"train\">\n                <span\n                  className=\"color\"\n                  style={{ backgroundColor: train.hexcolor }}\n                />{\" \"}\n                {train.destination}\n              </div>\n              {stations.map(({ station, at, intMinutes }) => (\n                <div key={station}>\n                  {station} {intMinutes}\n                </div>\n              ))}\n            </div>\n          ))}\n        </div>\n        <div>\n          <h2>Sources:</h2>\n          {sourceTrains.map(({ train, stations }, i) => (\n            <div className=\"train\" key={i}>\n              <h3>\n                {\" \"}\n                <span\n                  className=\"color\"\n                  style={{ backgroundColor: train.hexcolor }}\n                />{\" \"}\n                {train.destination}\n              </h3>\n              {stations.map(({ station, at, intMinutes }) => (\n                <div key={station}>\n                  {station} {intMinutes}\n                </div>\n              ))}\n            </div>\n          ))}\n        </div>\n        <div>\n          <Link to=\"/transfer-magic\">Back</Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  transferMagicData: transferMagicSelector(state),\n})\n\nexport default connect(mapStateToProps)(App)\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport { HashRouter as Router, Route } from \"react-router-dom\"\nimport moment from \"moment\"\n\nimport \"./index.css\"\nimport Store from \"./store\"\nimport Trip from \"./components/trip\"\nimport TransferMagic from \"./components/transfer-magic\"\n\nimport registerServiceWorker from \"./registerServiceWorker\"\n\nmoment.updateLocale(\"en\", {\n  relativeTime: {\n    s: \"%d seconds\",\n  },\n})\n\nconst StoreInstance = Store()\n\nReactDOM.render(\n  <Provider store={StoreInstance}>\n    <Router>\n      <div className=\"App\">\n        <Route exact path=\"/\" component={Trip} />\n        <Route exact path=\"/transfer-magic\" component={TransferMagic} />\n      </div>\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n)\nregisterServiceWorker()\n","import { createStore, applyMiddleware } from \"redux\"\nimport { routerMiddleware } from \"react-router-redux\"\nimport thunkMiddleware from \"redux-thunk\"\n\nimport reducers from \"./reducers\"\n\nexport default function configureStore(history, initialState) {\n  const create = window.devToolsExtension\n    ? window.devToolsExtension()(createStore)\n    : createStore\n\n  const createStoreWithMiddleware = applyMiddleware(\n    thunkMiddleware,\n    routerMiddleware(history)\n  )(create)\n\n  const store = createStoreWithMiddleware(reducers, initialState)\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept(\"./reducers\", () => {\n      const nextReducers = require(\"./reducers/index\")\n      store.replaceReducer(nextReducers)\n    })\n  }\n  return store\n}\n"],"sourceRoot":""}