{"version":3,"sources":["actions/update-settings.js","utilities/index.js","actions/fetch-station-etds.js","actions/fetch-bart-advisories.js","actions/get-user-location.js","reducers/settings.js","reducers/station-etds.js","reducers/bart-advisories.js","reducers/user-location.js","reducers/index.js","selectors/current-station-etds.js","selectors/transfer-magic.js","selectors/closest-station.js","components/trip.js","components/transfer-magic.js","registerServiceWorker.js","index.js","store.js"],"names":["UPDATE_SETTINGS","updateSettings","settings","type","payload","bartApiRoot","window","location","protocol","bartStationETDsUrl","station","dir","arguments","length","undefined","concat","toLowerCase","bartAdvisoriesUrl","checkFetchStatus","response","status","error","Error","statusText","stationsHome","radians","n","Math","PI","getBearing","_ref","_ref2","_ref3","Object","slicedToArray","startLong","startLat","_ref4","endLong","endLat","dLong","dPhi","log","tan","abs","atan2","settingsPresets","preset","currentBartStation","bartDestination","bartMinutes","bartDirection","walkingMinutes","trainColors","REQUEST_STATION_ETDS","RECEIVE_STATION_ETDS","RECEIVE_STATION_ETDS_ERROR","fetchStationETDs","dispatch","getState","meta","requestStationETDs","url","fetch","then","req","json","data","receiveStationETDs","catch","e","console","receiveStationETDsError","REQUEST_BART_ADVISORIES","RECEIVE_BART_ADVISORIES","RECEIVE_BART_ADVISORIES_ERROR","fetchBartAdvisories","REQUEST_USER_LOCATION","RECEIVE_USER_LOCATION","RECEIVE_USER_LOCATION_ERROR","Date","getHours","defaultState","find","d","defaultStation","isFetching","bartAdvisories","position","reducers","combineReducers","state","action","assign","stationETDs","stationUpdate","defineProperty","_action$payload$root","root","date","time","destinations","etd","at","moment","updatedStation","trains","reduce","acc","destination","abbreviation","limited","estimate","map","train","intMinutes","minutes","parseInt","clone","add","sort","a","b","diff","errorStation","bsa","i","description","userLocation","currentStationEtdsSelector","createSelector","filter","t","includes","color","transferMagicSelector","stations","target","colors","direction","source","some","s","rawTrains","trainStations","stationTrain","targetTrains","sourceTrains","bartStations","rawBartStations","lat","parseFloat","gtfs_latitude","lon","gtfs_longitude","bartStationMap","abbr","forEach","allAdjacencies","bartRoutes","config","idx","indexOf","adjacencies","Array","from","Set","adj","distance","geoDistance","bearing","distanceToStationsSelector","_userLocation$positio","_userLocation$positio2","coords","latitude","longitude","timestamp","distanceToStations","Trip","closestDistance","min","closestStation","timer","counter","handleReload","_this","load","tick","setState","switchPreset","newSettings","props","this","setInterval","clearInterval","_this$props","_this$props$settings","react_default","createElement","className","onClick","react_router_dom","to","id","platform","hexcolor","bikeflag","delay","key","style","backgroundColor","fromNow","format","href","adv","name","mins","Component","connect","App","_this$props$transferM","transferMagicData","join","_ref5","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","updateLocale","relativeTime","StoreInstance","history","initialState","create","devToolsExtension","createStore","applyMiddleware","thunkMiddleware","routerMiddleware","createStoreWithMiddleware","Store","ReactDOM","render","es","store","react_router","exact","path","component","TransferMagic","document","getElementById","URL","process","origin","addEventListener","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.630e1568.chunk.js","sourcesContent":["export const UPDATE_SETTINGS = \"UPDATE_SETTINGS\"\n\nexport const updateSettings = settings => ({\n  type: UPDATE_SETTINGS,\n  payload: settings,\n})\n","export const bartApiKey = \"MW9S-E7SL-26DU-VV8V&\"\nexport const bartApiRoot = window.location.protocol + \"//api.bart.gov/api/\"\n\nexport const bartStationETDsUrl = (station, dir = null) =>\n  `${bartApiRoot}etd.aspx?cmd=etd&orig=${station}${\n    dir ? \"&dir=\" + dir[0].toLowerCase() : \"\"\n  }&key=${bartApiKey}&json=y`\n\nexport const bartAdvisoriesUrl = `${bartApiRoot}bsa.aspx?cmd=bsa&key=${bartApiKey}&json=y`\n\nexport const checkFetchStatus = response => {\n  if (response.status >= 200 && response.status < 300) {\n    return response\n  }\n  const error = new Error(response.statusText)\n  error.response = response\n  throw error\n}\n\nexport const stationsHome = [\n  [\"24th Mission\", 32, \"24TH\"],\n  [\"16th Mission\", 30, \"16TH\"],\n  [\"Civic Center\", 28, \"CIVC\"],\n  [\"Powell\", 26, \"POWL\"],\n  [\"Montgomery\", 25, \"MONT\"],\n  [\"Embarcadero\", 23, \"EMBR\"],\n  [\"West Oakland\", 16, \"WOAK\"],\n  [\"12th\", 13, \"12TH\"],\n  [\"19th\", 11, \"19TH\"],\n  [\"MacArthur\", 8, \"MCAR\"],\n  [\"Ashby\", 5, \"ASHB\"],\n  [\"Berkeley\", 2, \"DBRK\"],\n  [\"North Berkeley\", 0, \"NBRK\"],\n]\n\nexport const radians = n => n * (Math.PI / 180)\n\nexport const degrees = n => n * (180 / Math.PI)\n\nexport const getBearing = ([startLong, startLat], [endLong, endLat]) => {\n  startLat = radians(startLat)\n  startLong = radians(startLong)\n  endLat = radians(endLat)\n  endLong = radians(endLong)\n\n  var dLong = endLong - startLong\n\n  var dPhi = Math.log(\n    Math.tan(endLat / 2.0 + Math.PI / 4.0) /\n      Math.tan(startLat / 2.0 + Math.PI / 4.0)\n  )\n  if (Math.abs(dLong) > Math.PI) {\n    if (dLong > 0.0) dLong = -(2.0 * Math.PI - dLong)\n    else dLong = 2.0 * Math.PI + dLong\n  }\n\n  return (degrees(Math.atan2(dLong, dPhi)) + 360.0) % 360.0\n}\n\nexport const settingsPresets = [\n  {\n    preset: \"home2Work\",\n    currentBartStation: \"NBRK\",\n    bartDestination: \"MONT\",\n    bartMinutes: 25,\n    bartDirection: \"South\",\n    walkingMinutes: 5,\n  },\n  {\n    preset: \"work2Home\",\n    currentBartStation: \"MONT\",\n    bartDestination: \"NBRK\",\n    bartMinutes: 25,\n    bartDirection: \"North\",\n    trainColors: [\"RED\", \"YELLOW\"],\n    walkingMinutes: 9,\n  },\n]\n","import { checkFetchStatus, bartStationETDsUrl } from \"../utilities\"\n\nexport const REQUEST_STATION_ETDS = \"REQUEST_STATION_ETDS\"\nexport const RECEIVE_STATION_ETDS = \"RECEIVE_STATION_ETDS\"\nexport const RECEIVE_STATION_ETDS_ERROR = \"RECEIVE_STATION_ETDS_ERROR\"\n\nfunction requestStationETDs(station, dir) {\n  return {\n    type: REQUEST_STATION_ETDS,\n    meta: { station, dir },\n  }\n}\n\nfunction receiveStationETDs(station, dir, payload) {\n  return {\n    type: RECEIVE_STATION_ETDS,\n    meta: { station, dir },\n    payload,\n  }\n}\n\nfunction receiveStationETDsError(station, dir, error) {\n  console.error(error)\n  return {\n    type: RECEIVE_STATION_ETDS_ERROR,\n    meta: { station, dir },\n    error,\n  }\n}\n\nexport function fetchStationETDs(station, dir = null) {\n  return (dispatch, getState) => {\n    dispatch(requestStationETDs(station, dir))\n\n    let url = bartStationETDsUrl(station, dir)\n\n    return fetch(url)\n      .then(checkFetchStatus)\n      .then(req => req.json())\n      .then(data => dispatch(receiveStationETDs(station, dir, data)))\n      .catch(e => dispatch(receiveStationETDsError(station, dir, e)))\n  }\n}\n","import { checkFetchStatus, bartAdvisoriesUrl } from \"../utilities\"\n\nexport const REQUEST_BART_ADVISORIES = \"REQUEST_BART_ADVISORIES\"\nexport const RECEIVE_BART_ADVISORIES = \"RECEIVE_BART_ADVISORIES\"\nexport const RECEIVE_BART_ADVISORIES_ERROR = \"RECEIVE_BART_ADVISORIES_ERROR\"\n\nfunction requestBartAdvisories() {\n  return {\n    type: REQUEST_BART_ADVISORIES,\n  }\n}\n\nfunction receiveBartAdvisories(payload) {\n  return {\n    type: RECEIVE_BART_ADVISORIES,\n    payload,\n  }\n}\n\nfunction receiveBartAdvisoriesError(error) {\n  console.error(error)\n  return {\n    type: RECEIVE_BART_ADVISORIES_ERROR,\n    error,\n  }\n}\n\nexport function fetchBartAdvisories(station) {\n  return (dispatch, getState) => {\n    dispatch(requestBartAdvisories())\n\n    return fetch(bartAdvisoriesUrl)\n      .then(checkFetchStatus)\n      .then(req => req.json())\n      .then(data => dispatch(receiveBartAdvisories(data)))\n      .catch(e => dispatch(receiveBartAdvisoriesError(e)))\n  }\n}\n","export const REQUEST_USER_LOCATION = \"REQUEST_USER_LOCATION\"\nexport const RECEIVE_USER_LOCATION = \"RECEIVE_USER_LOCATION\"\nexport const RECEIVE_USER_LOCATION_ERROR = \"RECEIVE_USER_LOCATION_ERROR\"\n\nfunction requestUserLocation() {\n  return {\n    type: REQUEST_USER_LOCATION,\n  }\n}\n\nfunction receiveUserLocation(payload) {\n  return {\n    type: RECEIVE_USER_LOCATION,\n    payload,\n  }\n}\n\nfunction receiveUserLocationError(error) {\n  console.error(error)\n  return {\n    type: RECEIVE_USER_LOCATION_ERROR,\n    error,\n  }\n}\n\nexport function getUserLocation() {\n  return (dispatch, getState) => {\n    dispatch(requestUserLocation())\n\n    navigator.geolocation.getCurrentPosition(\n      pos => dispatch(receiveUserLocation(pos)),\n      e => dispatch(receiveUserLocationError(e))\n    )\n  }\n}\n","import { UPDATE_SETTINGS } from \"../actions/\"\nimport { settingsPresets } from \"../utilities\"\n\nconst preset = new Date().getHours() < 12 ? \"home2Work\" : \"work2Home\"\nconst defaultState = settingsPresets.find(d => d.preset === preset)\n\nexport default function settings(state = defaultState, action) {\n  switch (action.type) {\n    case UPDATE_SETTINGS:\n      return Object.assign({}, state, action.payload)\n    default:\n      return state\n  }\n}\n","import moment from \"moment\"\n\nimport {\n  REQUEST_STATION_ETDS,\n  RECEIVE_STATION_ETDS,\n  RECEIVE_STATION_ETDS_ERROR,\n} from \"../actions/\"\n\nconst defaultStation = {\n  isFetching: true,\n  error: false,\n}\nconst defaultState = {}\n\nexport default function stationETDs(state = defaultState, action) {\n  switch (action.type) {\n    case REQUEST_STATION_ETDS:\n      let { station } = action.meta\n\n      const stationUpdate = Object.assign(state[station] || defaultStation, {\n        isFetching: true,\n      })\n\n      return Object.assign({}, state, { [station]: stationUpdate })\n\n    case RECEIVE_STATION_ETDS:\n      const {\n        root: { date, time, station: [{ etd: destinations }] },\n      } = action.payload\n\n      const at = moment(date + time, \"MM/DD/YYYYHH:mm:ss a\")\n\n      const trains = destinations\n        .reduce(\n          (acc, { destination, abbreviation, limited, estimate }) =>\n            acc.concat(\n              estimate.map(train => {\n                const intMinutes =\n                  train.minutes === \"Leaving\" ? 0 : parseInt(train.minutes, 10)\n                return Object.assign(train, {\n                  destination,\n                  abbreviation,\n                  limited,\n                  intMinutes,\n                  at: at.clone().add(intMinutes, \"minutes\"),\n                })\n              })\n            ),\n          []\n        )\n        .sort((a, b) => a.at.diff(b.at))\n\n      const updatedStation = {\n        isFetching: false,\n        trains,\n        at,\n      }\n\n      return Object.assign({}, state, { [action.meta.station]: updatedStation })\n\n    case RECEIVE_STATION_ETDS_ERROR:\n      const errorStation = Object.assign({}, state[action.meta.station], {\n        error: action.error,\n      })\n      return Object.assign({}, state, { [action.meta.station]: errorStation })\n\n    default:\n      return state\n  }\n}\n","import {\n  REQUEST_BART_ADVISORIES,\n  RECEIVE_BART_ADVISORIES,\n  RECEIVE_BART_ADVISORIES_ERROR,\n} from \"../actions/\"\n\nconst defaultState = {\n  bartAdvisories: undefined,\n  isFetching: true,\n  error: false,\n}\n\nexport default function bartAdvisories(state = defaultState, action) {\n  switch (action.type) {\n    case REQUEST_BART_ADVISORIES:\n      return Object.assign({}, state, defaultState, {\n        isFetching: true,\n        error: false,\n      })\n    case RECEIVE_BART_ADVISORIES:\n      return Object.assign({}, state, {\n        bartAdvisories: action.payload.root.bsa.map(\n          i => i.description[\"#cdata-section\"]\n        ),\n        isFetching: false,\n        error: false,\n      })\n    case RECEIVE_BART_ADVISORIES_ERROR:\n      return Object.assign({}, state, {\n        isFetching: false,\n        error: action.error,\n      })\n    default:\n      return state\n  }\n}\n","import {\n  REQUEST_USER_LOCATION,\n  RECEIVE_USER_LOCATION,\n  RECEIVE_USER_LOCATION_ERROR,\n} from \"../actions/\"\n\nconst defaultState = {\n  position: undefined,\n  isFetching: false,\n  error: false,\n}\n\nexport default function userLocation(state = defaultState, action) {\n  switch (action.type) {\n    case REQUEST_USER_LOCATION:\n      return Object.assign({}, state, {\n        isFetching: true,\n        error: false,\n      })\n    case RECEIVE_USER_LOCATION:\n      return Object.assign({}, state, {\n        position: action.payload,\n        isFetching: false,\n        error: false,\n      })\n    case RECEIVE_USER_LOCATION_ERROR:\n      return Object.assign({}, state, {\n        isFetching: false,\n        error: action.error,\n      })\n    default:\n      return state\n  }\n}\n","import { combineReducers } from \"redux\"\n\nimport settings from \"./settings\"\nimport stationETDs from \"./station-etds\"\nimport bartAdvisories from \"./bart-advisories\"\nimport userLocation from \"./user-location\"\n\nconst reducers = combineReducers({\n  settings,\n  stationETDs,\n  bartAdvisories,\n  userLocation,\n})\n\nexport default reducers\n","import { createSelector } from \"reselect\"\n\nconst stationETDsSelector = state => state.stationETDs\nconst settingsSelector = state => state.settings\n\nexport const currentStationEtdsSelector = createSelector(\n  stationETDsSelector,\n  settingsSelector,\n  (\n    stationETDs,\n    {\n      currentBartStation,\n      bartDirection,\n      trainColors,\n      bartMinutes,\n      walkingMinutes,\n    }\n  ) => {\n    if (\n      !stationETDs[currentBartStation] ||\n      !stationETDs[currentBartStation].trains\n    ) {\n      return { isFetching: true }\n    }\n    return {\n      at: stationETDs[currentBartStation].at,\n      trains: stationETDs[currentBartStation].trains\n        .filter(\n          t =>\n            // t.direction === bartDirection &&\n            !trainColors || trainColors.includes(t.color)\n        )\n        .map(t =>\n          Object.assign({}, t, {\n            etd: t.at.clone().add(bartMinutes + walkingMinutes, \"minutes\"),\n          })\n        ),\n      isFetching: stationETDs[currentBartStation].isFetching,\n    }\n  }\n)\n","import { createSelector } from \"reselect\"\n\nconst stationETDsSelector = state => state.stationETDs\n\nexport const transferMagicSelector = createSelector(\n  stationETDsSelector,\n  (stationETDs, settings) => {\n    const stations = [\"12TH\", \"19TH\", \"MCAR\"]\n    const target = {\n      colors: [\"ORANGE\", \"RED\"],\n      direction: \"North\",\n    }\n    const source = {\n      colors: [\"YELLOW\"],\n      direction: \"North\",\n    }\n\n    if (stations.some(s => !stationETDs[s] || !stationETDs[s].trains)) {\n      return { isFetching: true }\n    }\n\n    const rawTrains = stationETDs[stations[0]].trains.map(train => {\n      let trainStations = stations.reduce((acc, station) => {\n        const stationTrain = stationETDs[station].trains.find(\n          t =>\n            t.destination === train.destination &&\n            t.length === train.length &&\n            t.intMinutes >= train.intMinutes\n        )\n        return stationTrain\n          ? acc.concat({\n              station,\n              at: stationTrain.at,\n              intMinutes: stationTrain.intMinutes,\n            })\n          : acc\n      }, [])\n\n      return {\n        train,\n        stations: trainStations,\n      }\n    })\n\n    const targetTrains = rawTrains.filter(\n      t =>\n        target.colors.includes(t.train.color) &&\n        t.train.direction === target.direction\n    )\n\n    const sourceTrains = rawTrains.filter(\n      t =>\n        source.colors.includes(t.train.color) &&\n        t.train.direction === source.direction\n    )\n\n    return {\n      isFetching: false,\n      targetTrains,\n      sourceTrains,\n      stations: stations.map(station => ({\n        station,\n        targetTrains: stationETDs[station].trains.filter(\n          t =>\n            target.colors.includes(t.color) && t.direction === target.direction\n        ),\n        sourceTrains: stationETDs[station].trains.filter(\n          t =>\n            source.colors.includes(t.color) && t.direction === source.direction\n        ),\n      })),\n    }\n  }\n)\n","import { createSelector } from \"reselect\"\nimport { geoDistance } from \"d3-geo\"\nimport { min } from \"d3-array\"\n\nimport { getBearing } from \"../utilities\"\nimport rawBartStations from \"../data/bart-stations.json\"\nimport bartRoutes from \"../data/bart-routes.json\"\n\nconst bartStations = rawBartStations.map(s =>\n  Object.assign({}, s, {\n    lat: parseFloat(s.gtfs_latitude),\n    lon: parseFloat(s.gtfs_longitude),\n  })\n)\nconst bartStationMap = bartStations.reduce(\n  (acc, s) => Object.assign(acc, { [s.abbr]: s }),\n  {}\n)\n\nbartStations.forEach(s => {\n  const abbr = s.abbr\n  const allAdjacencies = bartRoutes.reduce((acc, { config: { station } }) => {\n    const idx = station.indexOf(abbr)\n    if (idx === -1) {\n      return acc\n    }\n    if (idx === 0) {\n      return acc.concat(station[1])\n    }\n    if (idx === station.length - 1) {\n      return acc.concat(station[station.length - 2])\n    }\n    return acc.concat([station[idx - 1], station[idx + 1]])\n  }, [])\n  s.adjacencies = Array.from(new Set(allAdjacencies)).reduce(\n    (acc, adj) =>\n      Object.assign(acc, {\n        [adj]: {\n          distance: geoDistance(\n            [s.lon, s.lat],\n            [bartStationMap[adj].lon, bartStationMap[adj].lat]\n          ),\n          bearing: getBearing(\n            [s.lon, s.lat],\n            [bartStationMap[adj].lon, bartStationMap[adj].lat]\n          ),\n        },\n      }),\n    {}\n  )\n})\nconsole.log(bartStations)\n\nconst userLocationSelector = state => state.userLocation\n\nexport const distanceToStationsSelector = createSelector(\n  userLocationSelector,\n  userLocation => {\n    if (userLocation.isFetching) {\n      return { isFetching: true }\n    }\n    const {\n      coords: { latitude: lat, longitude: lon },\n      timestamp,\n    } = userLocation.position\n\n    const distanceToStations = bartStations.map(s =>\n      Object.assign({}, s, {\n        distance: geoDistance([s.lon, s.lat], [lon, lat]),\n        bearing: getBearing([s.lon, s.lat], [lon, lat]),\n      })\n    )\n\n    return {\n      isFetching: false,\n      distanceToStations,\n      timestamp,\n    }\n  }\n)\n\nexport const closestStationSelector = createSelector(\n  distanceToStationsSelector,\n  distanceToStations => {\n    if (distanceToStations.isFetching) {\n      return { isFetching: true }\n    }\n    const closestDistance = min(\n      distanceToStations.distanceToStations,\n      s => s.distance\n    )\n    const closestStation = distanceToStations.find(\n      ({ distance }) => distance === closestDistance\n    )\n\n    return {\n      isFetching: false,\n      closestStation,\n    }\n  }\n)\n","import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  fetchStationETDs,\n  fetchBartAdvisories,\n  updateSettings,\n} from \"../actions\"\nimport { currentStationEtdsSelector } from \"../selectors\"\nimport { stationsHome, settingsPresets } from \"../utilities\"\n\nclass Trip extends Component {\n  state = {\n    timer: null,\n    counter: 0,\n  }\n\n  componentDidMount() {\n    this.load()\n    this.setState({ timer: setInterval(this.tick, 3000) })\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timer)\n  }\n\n  load() {\n    this.props.dispatch(\n      fetchStationETDs(\n        this.props.settings.currentBartStation,\n        this.props.settings.bartDirection\n      )\n    )\n    this.props.dispatch(fetchBartAdvisories())\n  }\n\n  handleReload = e => this.load()\n\n  tick = () => {\n    this.setState({\n      counter: this.state.counter + 1,\n    })\n  }\n  switchPreset = () => {\n    const newSettings = settingsPresets.find(\n      d => d.preset !== this.props.settings.preset\n    )\n\n    this.props.dispatch(updateSettings(newSettings))\n    this.props.dispatch(\n      fetchStationETDs(\n        newSettings.currentBartStation,\n        newSettings.bartDirection\n      )\n    )\n  }\n\n  render() {\n    const {\n      settings: {\n        preset,\n        currentBartStation,\n        bartDirection,\n        walkingMinutes,\n        bartMinutes,\n      },\n      stationETDs,\n      bartAdvisories,\n    } = this.props\n\n    return (\n      <div className=\"bart-home\">\n        <div className=\"top-menu\">\n          <div>\n            preset: {preset} <button onClick={this.switchPreset}>switch</button>\n          </div>\n\n          <Link to=\"/transfer-magic\">Transfer!</Link>\n        </div>\n        <div className=\"bart-trains\">\n          {stationETDs.trains && (\n            <div id=\"bart-trains\">\n              {stationETDs.trains.map(\n                (\n                  {\n                    minutes,\n                    platform,\n                    direction,\n                    length,\n                    color,\n                    hexcolor,\n                    bikeflag,\n                    delay,\n                    destination,\n                    abbreviation,\n                    limited,\n                    at,\n                    etd,\n                  },\n                  i\n                ) => (\n                  <div className=\"train\" key={i}>\n                    <span\n                      className=\"color\"\n                      style={{ backgroundColor: hexcolor }}\n                    />{\" \"}\n                    <span className=\"minutes\">{at.fromNow(true)}</span>{\" \"}\n                    <span className=\"destination\">{destination}</span>{\" \"}\n                    <span className=\"length\">{length} car</span>{\" \"}\n                    <span className=\"home-time\">{etd.format(\"h:mm a\")}</span>\n                  </div>\n                )\n              )}\n            </div>\n          )}\n        </div>\n        <div id=\"bart-advisories\">\n          <a href=\"http://m.bart.gov/schedules/advisories\">BART Advisories</a>:{\" \"}\n          {bartAdvisories.isFetching && (\n            <span className=\"loading\">loading advisories</span>\n          )}\n          {bartAdvisories.bartAdvisories && (\n            <span id=\"bart-advisory-list\">\n              {bartAdvisories.bartAdvisories.map((adv, i) => (\n                <span key={i}>{adv}</span>\n              ))}\n            </span>\n          )}\n        </div>\n        <div className=\"data-freshness\">\n          {stationETDs.isFetching && (\n            <span className=\"loading\">\n              loading {currentBartStation} {bartDirection} trains\n            </span>\n          )}\n          {!stationETDs.isFetching && (\n            <span className=\"status\">\n              {currentBartStation} {bartDirection} trains{\" \"}\n              {stationETDs.at.fromNow()}\n            </span>\n          )}\n          <button onClick={this.handleReload}>Reload</button>\n        </div>\n        <div id=\"en-route-times\">\n          <ul id=\"bart-station-times\">\n            {stationsHome.map(([name, mins, abbr]) => (\n              <li key={abbr}>\n                <a href={`https://m.bart.gov/schedules/eta?stn=${abbr}`}>\n                  {name}\n                </a>\n                : {mins} mins\n              </li>\n            ))}\n          </ul>\n        </div>\n        <p id=\"estimate-info\">\n          Arrival estimates include {bartMinutes} minutes on train and{\" \"}\n          {walkingMinutes} minutes on foot.\n        </p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  settings: state.settings,\n  stationETDs: currentStationEtdsSelector(state),\n  bartAdvisories: state.bartAdvisories,\n})\n\nexport default connect(mapStateToProps)(Trip)\n","import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\n\nimport { fetchStationETDs } from \"../actions\"\nimport { transferMagicSelector } from \"../selectors\"\n\nclass App extends Component {\n  state = {}\n\n  componentWillMount() {\n    this.load()\n  }\n  load() {\n    this.props.dispatch(fetchStationETDs(\"12TH\", \"North\"))\n    this.props.dispatch(fetchStationETDs(\"19TH\", \"North\"))\n    this.props.dispatch(fetchStationETDs(\"MCAR\", \"North\"))\n  }\n  handleReload = e => this.load()\n\n  render() {\n    const {\n      transferMagicData: { isFetching, targetTrains, sourceTrains, stations },\n    } = this.props\n    if (isFetching) {\n      return <div className=\"loading\">loading</div>\n    }\n    return (\n      <div className=\"transfer-magic\">\n        <Link to=\"/\">Home</Link>\n        <div className=\"stations\">\n          {stations.map(({ station, targetTrains, sourceTrains }) => (\n            <div key={station} className=\"station\">\n              <div>\n                <a href={`https://m.bart.gov/schedules/eta?stn=${station}`}>\n                  {station}\n                </a>\n              </div>\n              <div>\n                source: {sourceTrains.map(t => t.intMinutes).join(\", \")}\n              </div>\n              <div>\n                target:{\" \"}\n                {targetTrains\n                  .filter(t => t.intMinutes >= sourceTrains[0].intMinutes)\n                  .map(t => t.intMinutes)\n                  .join(\", \")}\n              </div>\n            </div>\n          ))}\n        </div>\n        <div>\n          <h2>Targets:</h2>\n          {targetTrains.map(({ train, stations }, i) => (\n            <div key={i}>\n              <div className=\"train\">\n                <span\n                  className=\"color\"\n                  style={{ backgroundColor: train.hexcolor }}\n                />{\" \"}\n                {train.destination}\n              </div>\n              {stations.map(({ station, at, intMinutes }) => (\n                <div key={station}>\n                  {station} {intMinutes}\n                </div>\n              ))}\n            </div>\n          ))}\n        </div>\n        <div>\n          <h2>Sources:</h2>\n          {sourceTrains.map(({ train, stations }, i) => (\n            <div className=\"train\" key={i}>\n              <h3>\n                {\" \"}\n                <span\n                  className=\"color\"\n                  style={{ backgroundColor: train.hexcolor }}\n                />{\" \"}\n                {train.destination}\n              </h3>\n              {stations.map(({ station, at, intMinutes }) => (\n                <div key={station}>\n                  {station} {intMinutes}\n                </div>\n              ))}\n            </div>\n          ))}\n        </div>\n        <div>\n          <Link to=\"/transfer-magic\">Back</Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  transferMagicData: transferMagicSelector(state),\n})\n\nexport default connect(mapStateToProps)(App)\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport { HashRouter as Router, Route } from \"react-router-dom\"\nimport moment from \"moment\"\n\nimport \"./index.css\"\nimport Store from \"./store\"\nimport Trip from \"./components/trip\"\nimport TransferMagic from \"./components/transfer-magic\"\n\nimport registerServiceWorker from \"./registerServiceWorker\"\n\nmoment.updateLocale(\"en\", {\n  relativeTime: {\n    s: \"%d seconds\",\n  },\n})\n\nconst StoreInstance = Store()\n\nReactDOM.render(\n  <Provider store={StoreInstance}>\n    <Router>\n      <div className=\"App\">\n        <Route exact path=\"/\" component={Trip} />\n        <Route exact path=\"/transfer-magic\" component={TransferMagic} />\n      </div>\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n)\nregisterServiceWorker()\n","import { createStore, applyMiddleware } from \"redux\"\nimport { routerMiddleware } from \"react-router-redux\"\nimport thunkMiddleware from \"redux-thunk\"\n\nimport reducers from \"./reducers\"\n\nexport default function configureStore(history, initialState) {\n  const create = window.devToolsExtension\n    ? window.devToolsExtension()(createStore)\n    : createStore\n\n  const createStoreWithMiddleware = applyMiddleware(\n    thunkMiddleware,\n    routerMiddleware(history)\n  )(create)\n\n  const store = createStoreWithMiddleware(reducers, initialState)\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept(\"./reducers\", () => {\n      const nextReducers = require(\"./reducers/index\")\n      store.replaceReducer(nextReducers)\n    })\n  }\n  return store\n}\n"],"sourceRoot":""}