(this["webpackJsonpeat-my-shorts"]=this["webpackJsonpeat-my-shorts"]||[]).push([[0],{24:function(t){t.exports=JSON.parse('[{"name":"12th St. Oakland City Center","abbr":"12TH","gtfs_latitude":"37.803768","gtfs_longitude":"-122.271450","address":"1245 Broadway","city":"Oakland","county":"alameda","state":"CA","zipcode":"94612"},{"name":"16th St. Mission","abbr":"16TH","gtfs_latitude":"37.765062","gtfs_longitude":"-122.419694","address":"2000 Mission Street","city":"San Francisco","county":"sanfrancisco","state":"CA","zipcode":"94110"},{"name":"19th St. Oakland","abbr":"19TH","gtfs_latitude":"37.808350","gtfs_longitude":"-122.268602","address":"1900 Broadway","city":"Oakland","county":"alameda","state":"CA","zipcode":"94612"},{"name":"24th St. Mission","abbr":"24TH","gtfs_latitude":"37.752470","gtfs_longitude":"-122.418143","address":"2800 Mission Street","city":"San Francisco","county":"sanfrancisco","state":"CA","zipcode":"94110"},{"name":"Antioch","abbr":"ANTC","gtfs_latitude":"37.995388","gtfs_longitude":"-121.780420","address":"1600 Slatten Ranch Road","city":"Antioch","county":"Contra Costa","state":"CA","zipcode":"94509"},{"name":"Ashby","abbr":"ASHB","gtfs_latitude":"37.852803","gtfs_longitude":"-122.270062","address":"3100 Adeline Street","city":"Berkeley","county":"alameda","state":"CA","zipcode":"94703"},{"name":"Balboa Park","abbr":"BALB","gtfs_latitude":"37.721585","gtfs_longitude":"-122.447506","address":"401 Geneva Avenue","city":"San Francisco","county":"sanfrancisco","state":"CA","zipcode":"94112"},{"name":"Bay Fair","abbr":"BAYF","gtfs_latitude":"37.696924","gtfs_longitude":"-122.126514","address":"15242 Hesperian Blvd.","city":"San Leandro","county":"alameda","state":"CA","zipcode":"94578"},{"name":"Castro Valley","abbr":"CAST","gtfs_latitude":"37.690746","gtfs_longitude":"-122.075602","address":"3301 Norbridge Dr.","city":"Castro Valley","county":"alameda","state":"CA","zipcode":"94546"},{"name":"Civic Center/UN Plaza","abbr":"CIVC","gtfs_latitude":"37.779732","gtfs_longitude":"-122.414123","address":"1150 Market Street","city":"San Francisco","county":"sanfrancisco","state":"CA","zipcode":"94102"},{"name":"Coliseum","abbr":"COLS","gtfs_latitude":"37.753661","gtfs_longitude":"-122.196869","address":"7200 San Leandro St.","city":"Oakland","county":"alameda","state":"CA","zipcode":"94621"},{"name":"Colma","abbr":"COLM","gtfs_latitude":"37.684638","gtfs_longitude":"-122.466233","address":"365 D Street","city":"Colma","county":"sanmateo","state":"CA","zipcode":"94014"},{"name":"Concord","abbr":"CONC","gtfs_latitude":"37.973737","gtfs_longitude":"-122.029095","address":"1451 Oakland Avenue","city":"Concord","county":"contracosta","state":"CA","zipcode":"94520"},{"name":"Daly City","abbr":"DALY","gtfs_latitude":"37.706121","gtfs_longitude":"-122.469081","address":"500 John Daly Blvd.","city":"Daly City","county":"sanmateo","state":"CA","zipcode":"94014"},{"name":"Downtown Berkeley","abbr":"DBRK","gtfs_latitude":"37.870104","gtfs_longitude":"-122.268133","address":"2160 Shattuck Avenue","city":"Berkeley","county":"alameda","state":"CA","zipcode":"94704"},{"name":"Dublin/Pleasanton","abbr":"DUBL","gtfs_latitude":"37.701687","gtfs_longitude":"-121.899179","address":"5801 Owens Dr.","city":"Pleasanton","county":"alameda","state":"CA","zipcode":"94588"},{"name":"El Cerrito del Norte","abbr":"DELN","gtfs_latitude":"37.925086","gtfs_longitude":"-122.316794","address":"6400 Cutting Blvd.","city":"El Cerrito","county":"contracosta","state":"CA","zipcode":"94530"},{"name":"El Cerrito Plaza","abbr":"PLZA","gtfs_latitude":"37.902632","gtfs_longitude":"-122.298904","address":"6699 Fairmount Avenue","city":"El Cerrito","county":"contracosta","state":"CA","zipcode":"94530"},{"name":"Embarcadero","abbr":"EMBR","gtfs_latitude":"37.792874","gtfs_longitude":"-122.397020","address":"298 Market Street","city":"San Francisco","county":"sanfrancisco","state":"CA","zipcode":"94111"},{"name":"Fremont","abbr":"FRMT","gtfs_latitude":"37.557465","gtfs_longitude":"-121.976608","address":"2000 BART Way","city":"Fremont","county":"alameda","state":"CA","zipcode":"94536"},{"name":"Fruitvale","abbr":"FTVL","gtfs_latitude":"37.774836","gtfs_longitude":"-122.224175","address":"3401 East 12th Street","city":"Oakland","county":"alameda","state":"CA","zipcode":"94601"},{"name":"Glen Park","abbr":"GLEN","gtfs_latitude":"37.733064","gtfs_longitude":"-122.433817","address":"2901 Diamond Street","city":"San Francisco","county":"sanfrancisco","state":"CA","zipcode":"94131"},{"name":"Hayward","abbr":"HAYW","gtfs_latitude":"37.669723","gtfs_longitude":"-122.087018","address":"699 \'B\' Street","city":"Hayward","county":"alameda","state":"CA","zipcode":"94541"},{"name":"Lafayette","abbr":"LAFY","gtfs_latitude":"37.893176","gtfs_longitude":"-122.124630","address":"3601 Deer Hill Road","city":"Lafayette","county":"contracosta","state":"CA","zipcode":"94549"},{"name":"Lake Merritt","abbr":"LAKE","gtfs_latitude":"37.797027","gtfs_longitude":"-122.265180","address":"800 Madison Street","city":"Oakland","county":"alameda","state":"CA","zipcode":"94607"},{"name":"MacArthur","abbr":"MCAR","gtfs_latitude":"37.829065","gtfs_longitude":"-122.267040","address":"555 40th Street","city":"Oakland","county":"alameda","state":"CA","zipcode":"94609"},{"name":"Millbrae","abbr":"MLBR","gtfs_latitude":"37.600271","gtfs_longitude":"-122.386702","address":"200 North Rollins Road","city":"Millbrae","county":"sanmateo","state":"CA","zipcode":"94030"},{"name":"Montgomery St.","abbr":"MONT","gtfs_latitude":"37.789405","gtfs_longitude":"-122.401066","address":"598 Market Street","city":"San Francisco","county":"sanfrancisco","state":"CA","zipcode":"94104"},{"name":"North Berkeley","abbr":"NBRK","gtfs_latitude":"37.873967","gtfs_longitude":"-122.283440","address":"1750 Sacramento Street","city":"Berkeley","county":"alameda","state":"CA","zipcode":"94702"},{"name":"North Concord/Martinez","abbr":"NCON","gtfs_latitude":"38.003193","gtfs_longitude":"-122.024653","address":"3700 Port Chicago Highway","city":"Concord","county":"contracosta","state":"CA","zipcode":"94520"},{"name":"Oakland International Airport","abbr":"OAKL","gtfs_latitude":"37.713238","gtfs_longitude":"-122.212191","address":"4 Airport Drive","city":"Oakland","county":"alameda","state":"CA","zipcode":"94621"},{"name":"Orinda","abbr":"ORIN","gtfs_latitude":"37.878361","gtfs_longitude":"-122.183791","address":"11 Camino Pablo","city":"Orinda","county":"contracosta","state":"CA","zipcode":"94563"},{"name":"Pittsburg/Bay Point","abbr":"PITT","gtfs_latitude":"38.018914","gtfs_longitude":"-121.945154","address":"1700 West Leland Road","city":"Pittsburg","county":"contracosta","state":"CA","zipcode":"94565"},{"name":"Pittsburg Center","abbr":"PCTR","gtfs_latitude":"38.016941","gtfs_longitude":"-121.889457","address":"2099 Railroad Avenue","city":"Pittsburg","county":"Contra Costa","state":"CA","zipcode":"94565"},{"name":"Pleasant Hill/Contra Costa Centre","abbr":"PHIL","gtfs_latitude":"37.928468","gtfs_longitude":"-122.056012","address":"1365 Treat Blvd.","city":"Walnut Creek","county":"contracosta","state":"CA","zipcode":"94597"},{"name":"Powell St.","abbr":"POWL","gtfs_latitude":"37.784471","gtfs_longitude":"-122.407974","address":"899 Market Street","city":"San Francisco","county":"sanfrancisco","state":"CA","zipcode":"94102"},{"name":"Richmond","abbr":"RICH","gtfs_latitude":"37.936853","gtfs_longitude":"-122.353099","address":"1700 Nevin Avenue","city":"Richmond","county":"contracosta","state":"CA","zipcode":"94801"},{"name":"Rockridge","abbr":"ROCK","gtfs_latitude":"37.844702","gtfs_longitude":"-122.251371","address":"5660 College Avenue","city":"Oakland","county":"alameda","state":"CA","zipcode":"94618"},{"name":"San Bruno","abbr":"SBRN","gtfs_latitude":"37.637761","gtfs_longitude":"-122.416287","address":"1151 Huntington Avenue","city":"San Bruno","county":"sanmateo","state":"CA","zipcode":"94066"},{"name":"San Francisco International Airport","abbr":"SFIA","gtfs_latitude":"37.615966","gtfs_longitude":"-122.392409","address":"International Terminal, Level 3","city":"San Francisco Int\'l Airport","county":"sanmateo","state":"CA","zipcode":"94128"},{"name":"San Leandro","abbr":"SANL","gtfs_latitude":"37.721947","gtfs_longitude":"-122.160844","address":"1401 San Leandro Blvd.","city":"San Leandro","county":"alameda","state":"CA","zipcode":"94577"},{"name":"South Hayward","abbr":"SHAY","gtfs_latitude":"37.634375","gtfs_longitude":"-122.057189","address":"28601 Dixon Street","city":"Hayward","county":"alameda","state":"CA","zipcode":"94544"},{"name":"South San Francisco","abbr":"SSAN","gtfs_latitude":"37.664245","gtfs_longitude":"-122.443960","address":"1333 Mission Road","city":"South San Francisco","county":"sanmateo","state":"CA","zipcode":"94080"},{"name":"Union City","abbr":"UCTY","gtfs_latitude":"37.590630","gtfs_longitude":"-122.017388","address":"10 Union Square","city":"Union City","county":"alameda","state":"CA","zipcode":"94587"},{"name":"Walnut Creek","abbr":"WCRK","gtfs_latitude":"37.905522","gtfs_longitude":"-122.067527","address":"200 Ygnacio Valley Road","city":"Walnut Creek","county":"contracosta","state":"CA","zipcode":"94596"},{"name":"Warm Springs/South Fremont","abbr":"WARM","gtfs_latitude":"37.502171","gtfs_longitude":"-121.939313","address":"45193 Warm Springs Blvd","city":"Fremont","county":"alameda","state":"CA","zipcode":"94539"},{"name":"West Dublin/Pleasanton","abbr":"WDUB","gtfs_latitude":"37.699756","gtfs_longitude":"-121.928240","address":"6501 Golden Gate Drive","city":"Dublin","county":"alameda","state":"CA","zipcode":"94568"},{"name":"West Oakland","abbr":"WOAK","gtfs_latitude":"37.804872","gtfs_longitude":"-122.295140","address":"1451 7th Street","city":"Oakland","county":"alameda","state":"CA","zipcode":"94607"}]')},25:function(t){t.exports=JSON.parse('[{"name":"Antioch - SFIA/Millbrae","abbr":"ANTC-SFIA","routeID":"ROUTE 1","number":"1","origin":"ANTC","destination":"SFIA","direction":"South","hexcolor":"#ffff33","color":"YELLOW","holidays":"1","num_stns":"28","config":{"station":["ANTC","PCTR","PITT","NCON","CONC","PHIL","WCRK","LAFY","ORIN","ROCK","MCAR","19TH","12TH","WOAK","EMBR","MONT","POWL","CIVC","16TH","24TH","GLEN","BALB","DALY","COLM","SSAN","SBRN","SFIA","MLBR"]}},{"name":"Millbrae/SFIA - Antioch","abbr":"SFIA-ANTC","routeID":"ROUTE 2","number":"2","origin":"SFIA","destination":"ANTC","direction":"North","hexcolor":"#ffff33","color":"YELLOW","holidays":"1","num_stns":"28","config":{"station":["MLBR","SFIA","SBRN","SSAN","COLM","DALY","BALB","GLEN","24TH","16TH","CIVC","POWL","MONT","EMBR","WOAK","12TH","19TH","MCAR","ROCK","ORIN","LAFY","WCRK","PHIL","CONC","NCON","PITT","PCTR","ANTC"]}},{"name":"Warm Springs/South Fremont - Richmond","abbr":"WARM-RICH","routeID":"ROUTE 3","number":"3","origin":"WARM","destination":"RICH","direction":"North","hexcolor":"#ff9933","color":"ORANGE","holidays":"1","num_stns":"19","config":{"station":["WARM","FRMT","UCTY","SHAY","HAYW","BAYF","SANL","COLS","FTVL","LAKE","12TH","19TH","MCAR","ASHB","DBRK","NBRK","PLZA","DELN","RICH"]}},{"name":"Richmond - Warm Springs/South Fremont","abbr":"RICH-WARM","routeID":"ROUTE 4","number":"4","origin":"RICH","destination":"WARM","direction":"South","hexcolor":"#ff9933","color":"ORANGE","holidays":"1","num_stns":"19","config":{"station":["RICH","DELN","PLZA","NBRK","DBRK","ASHB","MCAR","19TH","12TH","LAKE","FTVL","COLS","SANL","BAYF","HAYW","SHAY","UCTY","FRMT","WARM"]}},{"name":"Warm Springs/South Fremont - Daly City","abbr":"WARM-DALY","routeID":"ROUTE 5","number":"5","origin":"WARM","destination":"DALY","direction":"North","hexcolor":"#339933","color":"GREEN","holidays":"0","num_stns":"20","config":{"station":["WARM","FRMT","UCTY","SHAY","HAYW","BAYF","SANL","COLS","FTVL","LAKE","WOAK","EMBR","MONT","POWL","CIVC","16TH","24TH","GLEN","BALB","DALY"]}},{"name":"Daly City - Warm Springs/South Fremont","abbr":"DALY-WARM","routeID":"ROUTE 6","number":"6","origin":"DALY","destination":"WARM","direction":"South","hexcolor":"#339933","color":"GREEN","holidays":"0","num_stns":"20","config":{"station":["DALY","BALB","GLEN","24TH","16TH","CIVC","POWL","MONT","EMBR","WOAK","LAKE","FTVL","COLS","SANL","BAYF","HAYW","SHAY","UCTY","FRMT","WARM"]}},{"name":"Richmond - Daly City/Millbrae","abbr":"RICH-MLBR","routeID":"ROUTE 7","number":"7","origin":"RICH","destination":"MLBR","direction":"South","hexcolor":"#ff0000","color":"RED","holidays":"0","num_stns":"23","config":{"station":["RICH","DELN","PLZA","NBRK","DBRK","ASHB","MCAR","19TH","12TH","WOAK","EMBR","MONT","POWL","CIVC","16TH","24TH","GLEN","BALB","DALY","COLM","SSAN","SBRN","MLBR"]}},{"name":"Millbrae/Daly City - Richmond","abbr":"MLBR-RICH","routeID":"ROUTE 8","number":"8","origin":"MLBR","destination":"RICH","direction":"North","hexcolor":"#ff0000","color":"RED","holidays":"0","num_stns":"23","config":{"station":["MLBR","SBRN","SSAN","COLM","DALY","BALB","GLEN","24TH","16TH","CIVC","POWL","MONT","EMBR","WOAK","12TH","19TH","MCAR","ASHB","DBRK","NBRK","PLZA","DELN","RICH"]}},{"name":"Dublin/Pleasanton - MacArthur","abbr":"DUBL-MCAR","routeID":"ROUTE 9","number":"9","origin":"DUBL","destination":"MCAR","direction":"South","hexcolor":"#0099cc","color":"BLUE","holidays":"1","num_stns":"11","config":{"station":["DUBL","WDUB","CAST","BAYF","SANL","COLS","FTVL","LAKE","12TH","19TH","MCAR"]}},{"name":"MacArthur - Dublin/Pleasanton","abbr":"MCAR-DUBL","routeID":"ROUTE 10","number":"10","origin":"MCAR","destination":"DUBL","direction":"North","hexcolor":"#0099cc","color":"BLUE","holidays":"1","num_stns":"11","config":{"station":["MCAR","19TH","12TH","LAKE","FTVL","COLS","SANL","BAYF","CAST","WDUB","DUBL"]}},{"name":"Dublin/Pleasanton - Daly City","abbr":"DUBL-DALY","routeID":"ROUTE 11","number":"11","origin":"DUBL","destination":"DALY","direction":"South","hexcolor":"#0099cc","color":"BLUE","holidays":"1","num_stns":"18","config":{"station":["DUBL","WDUB","CAST","BAYF","SANL","COLS","FTVL","LAKE","WOAK","EMBR","MONT","POWL","CIVC","16TH","24TH","GLEN","BALB","DALY"]}},{"name":"Daly City - Dublin/Pleasanton","abbr":"DALY-DUBL","routeID":"ROUTE 12","number":"12","origin":"DALY","destination":"DUBL","direction":"North","hexcolor":"#0099cc","color":"BLUE","holidays":"1","num_stns":"18","config":{"station":["DALY","BALB","GLEN","24TH","16TH","CIVC","POWL","MONT","EMBR","WOAK","LAKE","FTVL","COLS","SANL","BAYF","CAST","WDUB","DUBL"]}},{"name":"Millbrae - SFO","abbr":"MLBR-SFIA","routeID":"ROUTE 13","number":"13","origin":"MLBR","destination":"SFIA","direction":"North","hexcolor":"#c463c5","color":"","holidays":"1","num_stns":"2","config":{"station":["MLBR","SFIA"]}},{"name":"SFO - Millbrae","abbr":"SFIA-MLBR","routeID":"ROUTE 14","number":"14","origin":"SFIA","destination":"MLBR","direction":"South","hexcolor":"#c463c5","color":"","holidays":"1","num_stns":"2","config":{"station":["SFIA","MLBR"]}},{"name":"Oakland Airport - Coliseum","abbr":"OAKL-COLS","routeID":"ROUTE 19","number":"19","origin":"OAKL","destination":"COLS","direction":"North","hexcolor":"#d5cfa3","color":"BEIGE","holidays":"1","num_stns":"2","config":{"station":["OAKL","COLS"]}},{"name":"Coliseum - Oakland Airport","abbr":"COLS-OAKL","routeID":"ROUTE 20","number":"20","origin":"COLS","destination":"OAKL","direction":"South","hexcolor":"#d5cfa3","color":"BEIGE","holidays":"1","num_stns":"2","config":{"station":["COLS","OAKL"]}}]')},27:function(t,e,a){t.exports=a(42)},35:function(t,e,a){},42:function(t,e,a){"use strict";a.r(e);var n=a(0),i=a.n(n),o=a(13),s=a.n(o),r=a(9),c=a(7),l=a(2),d=a(14),u=a.n(d),m=(a(35),a(10)),g=a(22),A=a(23);const b="MW9S-E7SL-26DU-VV8V&",h=window.location.protocol+"//api.bart.gov/api/",C=function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return"".concat(h,"etd.aspx?cmd=etd&orig=").concat(t).concat(e?"&dir="+e[0].toLowerCase():"","&key=").concat(b,"&json=y")},f="".concat(h,"bsa.aspx?cmd=bsa&key=").concat(b,"&json=y"),E=t=>{if(t.status>=200&&t.status<300)return t;const e=new Error(t.statusText);throw e.response=t,e},y=[["24th Mission",32,"24TH"],["16th Mission",30,"16TH"],["Civic Center",28,"CIVC"],["Powell",26,"POWL"],["Montgomery",25,"MONT"],["Embarcadero",23,"EMBR"],["West Oakland",16,"WOAK"],["12th",13,"12TH"],["19th",11,"19TH"],["MacArthur",8,"MCAR"],["Ashby",5,"ASHB"],["Berkeley",2,"DBRK"],["North Berkeley",0,"NBRK"]],p=t=>t*(Math.PI/180),R=(t,e)=>{let[a,n]=t,[i,o]=e;n=p(n),a=p(a),o=p(o),i=p(i);var s=i-a,r=Math.log(Math.tan(o/2+Math.PI/4)/Math.tan(n/2+Math.PI/4));return Math.abs(s)>Math.PI&&(s=s>0?-(2*Math.PI-s):2*Math.PI+s),(Math.atan2(s,r)*(180/Math.PI)+360)%360},S=[{preset:"home2Work",currentBartStation:"NBRK",bartDestination:"MONT",bartMinutes:25,bartDirection:"South",walkingMinutes:10},{preset:"work2Home",currentBartStation:"MONT",bartDestination:"NBRK",bartMinutes:25,bartDirection:"North",trainColors:["RED","YELLOW"],walkingMinutes:9}];function L(t,e){return{type:"REQUEST_STATION_ETDS",meta:{station:t,dir:e}}}function T(t,e,a){return{type:"RECEIVE_STATION_ETDS",meta:{station:t,dir:e},payload:a}}function O(t,e,a){return console.error(a),{type:"RECEIVE_STATION_ETDS_ERROR",meta:{station:t,dir:e},error:a}}function _(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return(a,n)=>{a(L(t,e));let i=C(t,e);return fetch(i).then(E).then(t=>t.json()).then(n=>a(T(t,e,n))).catch(n=>a(O(t,e,n)))}}function M(t){return(t,e)=>(t({type:"REQUEST_BART_ADVISORIES"}),fetch(f).then(E).then(t=>t.json()).then(e=>t({type:"RECEIVE_BART_ADVISORIES",payload:e})).catch(e=>{return t((a=e,console.error(a),{type:"RECEIVE_BART_ADVISORIES_ERROR",error:a}));var a}))}const B=(new Date).getHours()<12?"home2Work":"work2Home",N=S.find(t=>t.preset===B);const D={isFetching:!0,error:!1},I={};const v={bartAdvisories:void 0,isFetching:!0,error:!1};const F={position:void 0,isFetching:!1,error:!1};var H=Object(m.b)({settings:function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:N,e=arguments.length>1?arguments[1]:void 0;switch(e.type){case"UPDATE_SETTINGS":return Object.assign({},t,e.payload);default:return t}},stationETDs:function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:I,e=arguments.length>1?arguments[1]:void 0;switch(e.type){case"REQUEST_STATION_ETDS":let{station:a}=e.meta;const n=Object.assign(t[a]||D,{isFetching:!0});return Object.assign({},t,{[a]:n});case"RECEIVE_STATION_ETDS":const{root:{date:i,time:o,station:[{etd:s}]}}=e.payload,r=u()(i+o,"MM/DD/YYYYHH:mm:ss a"),c={isFetching:!1,trains:s.reduce((t,e)=>{let{destination:a,abbreviation:n,limited:i,estimate:o}=e;return t.concat(o.map(t=>{const e="Leaving"===t.minutes?0:parseInt(t.minutes,10);return Object.assign(t,{destination:a,abbreviation:n,limited:i,intMinutes:e,at:r.clone().add(e,"minutes")})}))},[]).sort((t,e)=>t.at.diff(e.at)),at:r};return Object.assign({},t,{[e.meta.station]:c});case"RECEIVE_STATION_ETDS_ERROR":const l=Object.assign({},t[e.meta.station],{error:e.error});return Object.assign({},t,{[e.meta.station]:l});default:return t}},bartAdvisories:function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:v,e=arguments.length>1?arguments[1]:void 0;switch(e.type){case"REQUEST_BART_ADVISORIES":return Object.assign({},t,v,{isFetching:!0,error:!1});case"RECEIVE_BART_ADVISORIES":return Object.assign({},t,{bartAdvisories:e.payload.root.bsa.map(t=>t.description["#cdata-section"]),isFetching:!1,error:!1});case"RECEIVE_BART_ADVISORIES_ERROR":return Object.assign({},t,{isFetching:!1,error:e.error});default:return t}},userLocation:function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:F,e=arguments.length>1?arguments[1]:void 0;switch(e.type){case"REQUEST_USER_LOCATION":return Object.assign({},t,{isFetching:!0,error:!1});case"RECEIVE_USER_LOCATION":return Object.assign({},t,{position:e.payload,isFetching:!1,error:!1});case"RECEIVE_USER_LOCATION_ERROR":return Object.assign({},t,{isFetching:!1,error:e.error});default:return t}}});var W=a(8);const k=Object(W.a)(t=>t.stationETDs,t=>t.settings,(t,e)=>{let{currentBartStation:a,bartDirection:n,trainColors:i,bartMinutes:o,walkingMinutes:s}=e;return t[a]&&t[a].trains?{at:t[a].at,trains:t[a].trains.filter(t=>!i||i.includes(t.color)).map(t=>Object.assign({},t,{etd:t.at.clone().add(o+s,"minutes")})),isFetching:t[a].isFetching}:{isFetching:!0}}),w=Object(W.a)(t=>t.stationETDs,(t,e)=>{const a=["12TH","19TH","MCAR"],n={colors:["ORANGE","RED"],direction:"North"},i={colors:["YELLOW"],direction:"North"};if(a.some(e=>!t[e]||!t[e].trains))return{isFetching:!0};const o=t[a[0]].trains.map(e=>{let n=a.reduce((a,n)=>{const i=t[n].trains.find(t=>t.destination===e.destination&&t.length===e.length&&t.intMinutes>=e.intMinutes);return i?a.concat({station:n,at:i.at,intMinutes:i.intMinutes}):a},[]);return{train:e,stations:n}});return{isFetching:!1,targetTrains:o.filter(t=>n.colors.includes(t.train.color)&&t.train.direction===n.direction),sourceTrains:o.filter(t=>i.colors.includes(t.train.color)&&t.train.direction===i.direction),stations:a.map(e=>({station:e,targetTrains:t[e].trains.filter(t=>n.colors.includes(t.color)&&t.direction===n.direction),sourceTrains:t[e].trains.filter(t=>i.colors.includes(t.color)&&t.direction===i.direction)}))}});var U=a(44),P=a(26),Y=a(24),z=a(25);const K=Y.map(t=>Object.assign({},t,{lat:parseFloat(t.gtfs_latitude),lon:parseFloat(t.gtfs_longitude)})),V=K.reduce((t,e)=>Object.assign(t,{[e.abbr]:e}),{});K.forEach(t=>{const e=t.abbr,a=z.reduce((t,a)=>{let{config:{station:n}}=a;const i=n.indexOf(e);return-1===i?t:0===i?t.concat(n[1]):i===n.length-1?t.concat(n[n.length-2]):t.concat([n[i-1],n[i+1]])},[]);t.adjacencies=Array.from(new Set(a)).reduce((e,a)=>Object.assign(e,{[a]:{distance:Object(U.a)([t.lon,t.lat],[V[a].lon,V[a].lat]),bearing:R([t.lon,t.lat],[V[a].lon,V[a].lat])}}),{})}),console.log(K);const j=Object(W.a)(t=>t.userLocation,t=>{if(t.isFetching)return{isFetching:!0};const{coords:{latitude:e,longitude:a},timestamp:n}=t.position;return{isFetching:!1,distanceToStations:K.map(t=>Object.assign({},t,{distance:Object(U.a)([t.lon,t.lat],[a,e]),bearing:R([t.lon,t.lat],[a,e])})),timestamp:n}});Object(W.a)(j,t=>{if(t.isFetching)return{isFetching:!0};const e=Object(P.a)(t.distanceToStations,t=>t.distance);return{isFetching:!1,closestStation:t.find(t=>{let{distance:a}=t;return a===e})}});class x extends n.Component{constructor(){super(...arguments),this.state={timer:null,counter:0},this.handleReload=t=>this.load(),this.tick=()=>{this.setState({counter:this.state.counter+1})},this.switchPreset=()=>{const t=S.find(t=>t.preset!==this.props.settings.preset);this.props.dispatch((t=>({type:"UPDATE_SETTINGS",payload:t}))(t)),this.props.dispatch(_(t.currentBartStation,t.bartDirection))}}componentDidMount(){this.load(),this.setState({timer:setInterval(this.tick,3e3)})}componentWillUnmount(){clearInterval(this.state.timer)}load(){this.props.dispatch(_(this.props.settings.currentBartStation,this.props.settings.bartDirection)),this.props.dispatch(M())}render(){const{settings:{preset:t,currentBartStation:e,bartDirection:a,walkingMinutes:n,bartMinutes:o},stationETDs:s,bartAdvisories:r}=this.props;return i.a.createElement("div",{className:"bart-home"},i.a.createElement("div",{className:"top-menu"},i.a.createElement("div",null,"preset: ",t," ",i.a.createElement("button",{onClick:this.switchPreset},"switch")),i.a.createElement(c.b,{to:"/transfer-magic"},"Transfer!")),i.a.createElement("div",{className:"bart-trains"},s.trains&&i.a.createElement("div",{id:"bart-trains"},s.trains.map((t,e)=>{let{minutes:a,platform:n,direction:o,length:s,color:r,hexcolor:c,bikeflag:l,delay:d,destination:u,abbreviation:m,limited:g,at:A,etd:b}=t;return i.a.createElement("div",{className:"train",key:e},i.a.createElement("span",{className:"color",style:{backgroundColor:c}})," ",i.a.createElement("span",{className:"minutes"},A.fromNow(!0))," ",i.a.createElement("span",{className:"destination"},u)," ",i.a.createElement("span",{className:"length"},s," car")," ",i.a.createElement("span",{className:"home-time"},b.format("h:mm a")))}))),i.a.createElement("div",{id:"bart-advisories"},i.a.createElement("a",{href:"http://m.bart.gov/schedules/advisories"},"BART Advisories"),":"," ",r.isFetching&&i.a.createElement("span",{className:"loading"},"loading advisories"),r.bartAdvisories&&i.a.createElement("span",{id:"bart-advisory-list"},r.bartAdvisories.map((t,e)=>i.a.createElement("span",{key:e},t)))),i.a.createElement("div",{className:"data-freshness"},s.isFetching&&i.a.createElement("span",{className:"loading"},"loading ",e," ",a," trains"),!s.isFetching&&i.a.createElement("span",{className:"status"},e," ",a," trains"," ",s.at.fromNow()),i.a.createElement("button",{onClick:this.handleReload},"Reload")),i.a.createElement("div",{id:"en-route-times"},i.a.createElement("ul",{id:"bart-station-times"},y.map(t=>{let[e,a,n]=t;return i.a.createElement("li",{key:n},i.a.createElement("a",{href:"https://www.bart.gov/schedules/eta/".concat(n)},e),": ",a," mins")}))),i.a.createElement("p",{id:"estimate-info"},"Arrival estimates include ",o," minutes on train and"," ",n," minutes on foot."))}}var G=Object(r.b)(t=>({settings:t.settings,stationETDs:k(t),bartAdvisories:t.bartAdvisories}))(x);class J extends n.Component{constructor(){super(...arguments),this.state={},this.handleReload=t=>this.load()}componentWillMount(){this.load()}load(){this.props.dispatch(_("12TH","North")),this.props.dispatch(_("19TH","North")),this.props.dispatch(_("MCAR","North"))}render(){const{transferMagicData:{isFetching:t,targetTrains:e,sourceTrains:a,stations:n}}=this.props;return t?i.a.createElement("div",{className:"loading"},"loading"):i.a.createElement("div",{className:"transfer-magic"},i.a.createElement("div",{className:"top-menu"},i.a.createElement("div",null),i.a.createElement(c.b,{to:"/"},"Home")),i.a.createElement("div",{className:"stations"},n.map(t=>{let{station:e,targetTrains:a,sourceTrains:n}=t;return i.a.createElement("div",{key:e,className:"station"},i.a.createElement("div",null,i.a.createElement("a",{href:"https://www.bart.gov/schedules/eta/".concat(e)},e)),i.a.createElement("div",null,"source: ",n.map(t=>t.intMinutes).join(", ")),i.a.createElement("div",null,"target:"," ",a.filter(t=>t.intMinutes>=n[0].intMinutes).map(t=>t.intMinutes).join(", ")))})),i.a.createElement("div",null,i.a.createElement("h2",null,"Targets:"),e.map((t,e)=>{let{train:a,stations:n}=t;return i.a.createElement("div",{key:e},i.a.createElement("div",{className:"train"},i.a.createElement("span",{className:"color",style:{backgroundColor:a.hexcolor}})," ",a.destination),n.map(t=>{let{station:e,at:a,intMinutes:n}=t;return i.a.createElement("div",{key:e},e," ",n)}))})),i.a.createElement("div",null,i.a.createElement("h2",null,"Sources:"),a.map((t,e)=>{let{train:a,stations:n}=t;return i.a.createElement("div",{className:"train",key:e},i.a.createElement("h3",null," ",i.a.createElement("span",{className:"color",style:{backgroundColor:a.hexcolor}})," ",a.destination),n.map(t=>{let{station:e,at:a,intMinutes:n}=t;return i.a.createElement("div",{key:e},e," ",n)}))})),i.a.createElement("div",null,i.a.createElement(c.b,{to:"/transfer-magic"},"Back")))}}var Q=Object(r.b)(t=>({transferMagicData:w(t)}))(J);const Z=Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function q(t){navigator.serviceWorker.register(t).then(t=>{t.onupdatefound=()=>{const e=t.installing;e.onstatechange=()=>{"installed"===e.state&&(navigator.serviceWorker.controller?console.log("New content is available; please refresh."):console.log("Content is cached for offline use."))}}}).catch(t=>{console.error("Error during service worker registration:",t)})}u.a.updateLocale("en",{relativeTime:{s:"%d seconds"}});const $=function(t,e){const a=window.devToolsExtension?window.devToolsExtension()(m.c):m.c;return Object(m.a)(A.a,Object(g.routerMiddleware)(t))(a)(H,e)}();s.a.render(i.a.createElement(r.a,{store:$},i.a.createElement(c.a,null,i.a.createElement("div",{className:"App"},i.a.createElement(l.a,{exact:!0,path:"/",component:G}),i.a.createElement(l.a,{exact:!0,path:"/transfer-magic",component:Q})))),document.getElementById("root")),function(){if("serviceWorker"in navigator){if(new URL(".",window.location).origin!==window.location.origin)return;window.addEventListener("load",()=>{const t="".concat(".","/service-worker.js");Z?function(t){fetch(t).then(e=>{404===e.status||-1===e.headers.get("content-type").indexOf("javascript")?navigator.serviceWorker.ready.then(t=>{t.unregister().then(()=>{window.location.reload()})}):q(t)}).catch(()=>{console.log("No internet connection found. App is running in offline mode.")})}(t):q(t)})}}()}},[[27,1,2]]]);
//# sourceMappingURL=main.366d5257.chunk.js.map